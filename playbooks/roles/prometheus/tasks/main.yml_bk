- name: Check if Prometheus is already installed
  ansible.builtin.stat:
    path: "{{ prometheus_install_dir }}"
  register: prometheus_installed

- name: Remove existing Prometheus installation
  ansible.builtin.file:
    path: "{{ prometheus_install_dir }}"
    state: absent
  when: prometheus_installed.stat.exists

- name: Remove existing Prometheus configuration directory
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}"
    state: absent
  when: prometheus_installed.stat.exists

- name: Ensure Prometheus user exists
  ansible.builtin.user:
    name: prometheus
    state: present

- name: Ensure Prometheus group exists
  ansible.builtin.group:
    name: prometheus
    state: present

- name: Ensure Prometheus install directory exists
  ansible.builtin.file:
    path: "{{ prometheus_install_dir }}"
    state: directory
    mode: '0755'
    owner: prometheus
    group: prometheus

- name: Download Prometheus
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/prometheus.tar.gz

- name: Extract Prometheus
  ansible.builtin.unarchive:
    src: /tmp/prometheus.tar.gz
    dest: "{{ prometheus_install_dir }}"
    remote_src: yes
    extra_opts: [ "--strip-components=1" ]

- name: Ensure Prometheus config directory exists
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}"
    state: directory
    mode: '0755'
    owner: prometheus
    group: prometheus

- name: Deploy Prometheus configuration
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: prometheus
    group: prometheus
    mode: '0644'

- name: Deploy Prometheus service file
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'

- name: Set SELinux to permissive mode
  ansible.builtin.command:
    cmd: setenforce 0
  become: yes

- name: Reload systemd to pick up new Prometheus service
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start Prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: yes

- name: Check Prometheus service status
  ansible.builtin.systemd:
    name: prometheus
    state: started
  register: prometheus_service_status

- name: Debug Prometheus service status
  ansible.builtin.debug:
    msg: "Prometheus service status: {{ prometheus_service_status }}"

